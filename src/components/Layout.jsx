import Head from 'next/head'
import { AsideData } from '@/components/AsideData'
import { Logo } from '@/icons/Logo'
import { ChevronRightIcon } from '@/icons/Icons'
import { useState } from 'react'

function Aside() {
  const [subMenuOpen, setSubMenuOpen] = useState([])
  const [itemLinkedId, setItemLinkedId] = useState(null)

  const openSubMenu = ({ menuItem }) => {
    if (menuItem.options.length === 0) {
      linkItem(menuItem)
      return
    }

    const menuOpen = isSubMenuOpened({ menuItem })
      ? subMenuOpen.filter(item => menuItem.id !== item.id)
      : [...subMenuOpen, menuItem]

    setSubMenuOpen(menuOpen)
  }

  const isSubMenuOpened = ({ menuItem }) => subMenuOpen.some(item => item.id === menuItem.id)

  const linkItem = ({ id }) => setItemLinkedId(id)

  const isItemLinkedId = ({ id }) => id === itemLinkedId

  const menuItemStyles = (menuItem) => {
    if (isItemLinkedId(menuItem) || menuItem.options.some(isItemLinkedId)) {
      return 'bg-[#377DFF] text-[#377DFF] hover:bg-[#377DFF]/85 shadow-md bg-opacity-20' + (
        isItemLinkedId(menuItem) || !isSubMenuOpened({ menuItem })
          ? ' font-semibold'
          : ''
      )
    }

    return 'text-gray-500 ' + (isSubMenuOpened({ menuItem })
      ? 'bg-[#435971] bg-opacity-5'
      : 'hover:bg-[#435971] hover:bg-opacity-5')
  }

  return (
    <aside className='fixed bg-white w-72 h-screen shadow-md'>
      <div className='inline-flex w-full py-3 px-3'>
        <Logo className='text-5xl font-extrabold cursor-pointer m-auto' />
      </div>
      <div className=''>
        {AsideData.map((menuItem) => (
          <div key={menuItem.id}>
            {menuItem.section && (
              <div className='mt-4 mb-2 px-8 py-2 text-[#a1acb8] text-xs uppercase menu-header relative'>
                <span className='uppercase text-sm'>{menuItem.title}</span>
              </div>
            )}
            {!menuItem.section && (
              <div className='mx-3'>
                <a
                  className={`flex items-center cursor-pointer my-1 py-3 px-3 gap-3 rounded-lg transition-colors duration-200 text-sm ${menuItemStyles(menuItem)}`}
                  onClick={() => openSubMenu({ menuItem })}
                >
                  <span className='block float-left w-4 h-4'>
                    {menuItem.icon}
                  </span>
                  <span className='text-sm flex-1'>
                    {menuItem.title}
                  </span>
                  {menuItem.options.length > 0 && (
                    <span className={`w-4 h-4 duration-200 ${isSubMenuOpened({ menuItem }) ? 'rotate-90' : 'rotate-0'}`}>
                      <ChevronRightIcon />
                    </span>
                  )}
                </a>
                {menuItem.options.length > 0 && isSubMenuOpened({ menuItem }) && (menuItem.options.map(subMenuItem => (
                  <div key={subMenuItem.id}>
                    <a
                      className={`relative menu-link flex items-center gap-x-4 cursor-pointer py-3 pl-12 text-gray-500 hover:bg-[#435971] hover:bg-opacity-5 rounded-lg transition-colors duration-200 ${(
                        isItemLinkedId(subMenuItem) && 'active font-semibold'
                      )}`}
                      onClick={() => linkItem(subMenuItem)}
                    >
                      <span className='text-sm'>
                        {subMenuItem.title}
                      </span>
                    </a>
                  </div>
                )))}
              </div>
            )}
          </div>
        ))}
      </div>
    </aside>
  )
}

export default function Layout({ children }) {
  return (
    <>
      <Head>
        <title>X | AleSquare</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <div className='flex w-full relative h-full'>
        <Aside />
        <div className='p-10 pl-80 w-full'>
          {children}
        </div>
      </div>
    </>
  )
}
